{"ast":null,"code":"export default function reducer(state, action) {\n  switch (action.type) {\n    case 'numberAdd2':\n      return { ...state,\n        number: state.number + 2\n      };\n\n    case 'numberMulti7':\n      return { ...state,\n        number: state.number * 7\n      };\n\n    case 'numberDiv25':\n      return { ...state,\n        number: state.number / 25\n      };\n\n    case 'numberInt':\n      return { ...state,\n        number: parseInt(state.number)\n      };\n\n    case 'numberAddN':\n      return { ...state,\n        number: state.number + action.payload\n      };\n\n    case 'login':\n      return { ...state,\n        user: {\n          name: action.payload\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/guilh/OneDrive/Documentos/Projetos/hooks/hooks/src/store/reducers/index.js"],"names":["reducer","state","action","type","number","parseInt","payload","user","name"],"mappings":"AACA,eAAe,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAE7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,YAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAe;AAAnC,OAAP;;AACJ,SAAK,cAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAe;AAAnC,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAe;AAAnC,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,MAAM,EAAEC,QAAQ,CAACJ,KAAK,CAACG,MAAP;AAA5B,OAAP;;AACJ,SAAK,YAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYG,QAAAA,MAAM,EAAEH,KAAK,CAACG,MAAN,GAAeF,MAAM,CAACI;AAA1C,OAAP;;AACJ,SAAK,OAAL;AACI,aAAO,EAAE,GAAGL,KAAL;AAAYM,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAEN,MAAM,CAACI;AAAf;AAAlB,OAAP;;AACJ;AACI,aAAOL,KAAP;AAdR;AAgBD","sourcesContent":["\r\nexport default function reducer(state, action) {\r\n\r\n  switch (action.type) {\r\n      case 'numberAdd2':\r\n          return { ...state, number: state.number + 2 }\r\n      case 'numberMulti7':\r\n          return { ...state, number: state.number * 7 }\r\n      case 'numberDiv25':\r\n          return { ...state, number: state.number / 25 }\r\n      case 'numberInt':\r\n          return { ...state, number: parseInt(state.number) }\r\n      case 'numberAddN':\r\n          return { ...state, number: state.number + action.payload }\r\n      case 'login':\r\n          return { ...state, user: { name: action.payload } }\r\n      default:\r\n          return state\r\n  }\r\n}\r\n "]},"metadata":{},"sourceType":"module"}